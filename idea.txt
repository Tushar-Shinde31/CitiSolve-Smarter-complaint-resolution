🧑‍💼 Admin Side (Internal Panel)
Feature No.
Feature Description
Feature / Concept
Covered in Previous Work?
Should We Keep It?
Why Keep It / Why Not?
1
View list of all submitted complaints
Data table rendering
✔️ Yes
✔️ Yes
Already used in dashboard views
1
View list of all submitted complaints
API Integration (GET)
❌ No
(Not using GET)
✔️ Yes
Just covered with fetch/axios in useEffect
1
View list of all submitted complaints
Pagination & Filtering
✔️ Yes
✔️ Yes
Helps manage large data on UI
1
View list of all submitted complaints
Loading and empty states
✔️ Yes
✔️ Yes
Improves user feedback and clarity

3
Update status (from Open to In Progress to Resolved)
Status buttons/dropdown UI
✔️ Yes
✔️ Yes
Already done in earlier projects
3
Update status (from Open to In Progress to Resolved)
PATCH API Integration
❌ No
✔️ Yes
Needed when want to update/edit features
3
4
Add a resolution note when status is changed to “Resolved”
Conditional form rendering
✔️ Yes
✔️ Yes
Shown only when needed
4
Add a resolution note when status is changed to “Resolved”
Controlled text input
✔️ Yes
✔️ Yes
Standard form handling
4
Add a resolution note when status is changed to “Resolved”
POST / PATCH API call
❌ No
(Not using POST)
✔️ Yes
Same logic as form submissions
4
Add a resolution note when status is changed to “Resolved”
Validation & error handling
✔️ Yes
✔️ Yes
Ensures valid input


⚙️ System Behavior
Feature No.
Feature Description
Feature / Concept
Covered in Previous Work?
Should We Keep It?
Why Keep It / Why Not?
1
Auto-generate a unique complaint ID
Backend-generated unique ID
❌ No
✔️ Yes
Needed for tracking each complaint
1
Auto-generate a unique complaint ID
Display ID on UI
✔️ Yes
✔️ Yes
Shows complaint reference to users
2
Automatically save complaint with date and time of submission
Backend auto-timestamping
❌ No
✔️ Yes
Typically handled on backend that’s why
2
Automatically save complaint with date and time of submission
Display formatted date/time
✔️ Yes
✔️ Yes
Used date formatting before
3
Update the “last updated” timestamp whenever status changes
Backend updates updatedAt
❌ No
✔️ Yes
Its needed when status want to update tracking
3
Update the “last updated” timestamp whenever status changes
Show “last updated” in UI
✔️ Yes
✔️ Yes
Helps track progress visually



👥Citizen Side (User-facing) Features
Feature No.
Feature Description
Feature / Concept
Covered in Previous Work?
Should We Keep It?
Why Keep It / Why Not?
1
Submit a complaint through a form with fields for name, ward, location, category, photo, description
Controlled form inputs
✔️ Yes
✔️ Yes
Basic form handling already done
1
Submit a complaint through a form with fields for name, ward, location, category, photo, description
Form validation
✔️ Yes
✔️ Yes
Prevents incomplete or invalid submissions
1
Submit a complaint through a form with fields for name, ward, location, category, photo, description
File upload handling (photo)
❌ No
✔️ Yes
Adds real-world functionality to capture evidence
1
Submit a complaint through a form with fields for name, ward, location, category, photo, description
API Integration (POST)
❌ No
(Not using POST)
✔️ Yes
Covered with previous POST request features


2
View a dashboard of all complaints submitted. Each complaint shows current status: “Open”, “In Progress”, “Resolved”
Data table or card list rendering
✔️ Yes
✔️ Yes
Similar to dashboard/table features done earlier
2
View a dashboard of all complaints submitted. Each complaint shows current status: “Open”, “In Progress”, “Resolved”
API Integration (GET)
❌ No
(Not using GET)
✔️ Yes
When we want to call api using  fetch/axios
2
View a dashboard of all complaints submitted. Each complaint shows current status: “Open”, “In Progress”, “Resolved”
Conditional status rendering
✔️ Yes
✔️ Yes
Already used in status/tag UI features
2
View a dashboard of all complaints submitted. Each complaint shows current status: “Open”, “In Progress”, “Resolved”
Refresh or auto-update with `useEffect`
✔️ Yes
✔️ Yes
Keeps data live without manual reload

 


